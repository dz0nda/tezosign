version: "3.1"

services:
  api-server:
    build: .
    ports:
      - 9090:9090
    # network_mode: "host"
    restart: on-failure
    depends_on:
      - "db"
    deploy:
      restart_policy:
        condition: on-failure

  api-documentation:
    build:
      context: .
      dockerfile: Dockerfile-api
    ports:
      - 9080:9080

  tzkt-indexer:
    container_name: tzkt-sync
    image: bakingbad/tzkt-sync:latest
    restart: always
    depends_on:
      - "db"
    environment:
      ConnectionStrings__DefaultConnection: host=db;port=5432;database=${POSTGRES_DB:-tzkt_db};username=${POSTGRES_USER:-tzkt_admin};password=${POSTGRES_PASSWORD:-tzkt_admin}; 
      TezosNode__Endpoint: https://mainnet-tezos.giganode.io/
      TezosNode_Timeout: 60
      Logging__LogLevel__Default: "Debug"

  db:
    image: postgres:13
    restart: always
    volumes:
      - ./databases/scripts:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: "root"
    ports:
      - 127.0.0.1:5432:5432

  graphql-engine:
    image: hasura/graphql-engine:v2.2.0
    ports:
      - "8080:8080"
    depends_on:
    - "db"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://tzkt_admin:tzkt_admin@db:5432/tzkt_db
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    command:
    - graphql-engine
    - serve

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9070

volumes:
  postgres:
